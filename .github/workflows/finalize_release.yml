name: Finalize Release

on:
  push:
    branches:
      - main

jobs:
  finalize-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Main Branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Extract release branch and version
        id: extract_release_info
        run: |
          # Get the commit message
          commit_message="${{ github.event.head_commit.message }}"
          release_branch=$(echo "$commit_message" | grep -oP 'release/v\d+\.\d+\.\d+')

          if [[ -z "$release_branch" ]]; then
            echo "No release branch found in the commit message. Exiting workflow."
            exit 78
          fi

          if [[ ! "$release_branch" =~ ^release/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Release branch '$release_branch' does not match the expected format 'release/vX.X.X'. Exiting workflow."
            exit 78
          fi

          new_version="${release_branch#release/}"

          echo "release_branch=$release_branch" >> $GITHUB_ENV
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Tag new version
        run: |
          git tag -a "${{ env.new_version }}" -m "Release version ${{ env.new_version }}"
          git push origin "${{ env.new_version }}"

      - name: Create PR to merge main into develop
        run: |
          gh pr create \
            --base develop \
            --head main \
            --title "Merge main into develop for release ${{ env.new_version }}" \
            --body "This PR is to merge the main branch into develop after releasing version ${{ env.new_version }}."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete release branch
        run: |
          git push origin --delete "${{ env.release_branch }}"
